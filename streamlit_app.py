# streamlit_app.py
import streamlit as st
from langchain_core.messages import HumanMessage, AIMessage
from langchain_core.agents import AgentFinish
from graph import app # Importa o grafo compilado

# --- ConfiguraÃ§Ã£o da PÃ¡gina ---
st.set_page_config(page_title="ğŸ¤– Assistente Ferrocorte", page_icon="ğŸ¤–")
st.title("ğŸ¤– Assistente de Vendas Ferrocorte")
st.caption("Um chatbot para cotaÃ§Ã£o de produtos siderÃºrgicos.")

# --- Gerenciamento de Estado da SessÃ£o ---
def reset_conversation():
    # Inicializa o histÃ³rico de mensagens
    st.session_state.messages = [AIMessage(content="OlÃ¡! Bem-vindo(a) Ã  Ferrocorte Industrial. Como posso te ajudar hoje?")]
    # Inicializa o orÃ§amento no estado da sessÃ£o do Streamlit
    st.session_state.orcamento_atual = {"itens": [], "subtotal": 0.0}
    st.session_state.session_ended = False

st.sidebar.button("Nova CotaÃ§Ã£o", on_click=reset_conversation, use_container_width=True)

if "messages" not in st.session_state:
    reset_conversation()

# --- LÃ³gica da Interface do Chat ---
for message in st.session_state.messages:
    with st.chat_message("assistant" if isinstance(message, AIMessage) else "user", avatar="ğŸ¤–" if isinstance(message, AIMessage) else "ğŸ‘¤"):
        st.markdown(message.content)

if prompt := st.chat_input("Sua mensagem...", disabled=st.session_state.session_ended):
    st.session_state.messages.append(HumanMessage(content=prompt))
    with st.chat_message("user", avatar="ğŸ‘¤"):
        st.markdown(prompt)

    with st.chat_message("assistant", avatar="ğŸ¤–"):
        with st.spinner("Analisando seu pedido..."):
            
            # Define o estado inicial para o grafo, passando o orÃ§amento do st.session_state
            initial_state = {
                "input": prompt,
                "chat_history": st.session_state.messages[:-1],
                "orcamento_atual": st.session_state.orcamento_atual # Passa o estado
            }

            # Executa o grafo
            final_state = app.invoke(initial_state)

            # Atualiza o orÃ§amento no estado do Streamlit com o resultado do grafo
            st.session_state.orcamento_atual = final_state.get("orcamento_atual")
            
            agent_outcome = final_state.get("agent_outcome")
            if isinstance(agent_outcome, AgentFinish):
                final_response_text = agent_outcome.return_values["output"]
            else:
                final_response_text = "Desculpe, ocorreu um erro inesperado. Por favor, tente novamente."

            st.markdown(final_response_text)

    st.session_state.messages.append(AIMessage(content=final_response_text))

    if "um de nossos consultores jÃ¡ te retorna" in final_response_text:
        st.session_state.session_ended = True
        st.info("SessÃ£o de cotaÃ§Ã£o finalizada. Para iniciar uma nova, clique em 'Nova CotaÃ§Ã£o' na barra lateral.")
        st.rerun()